{"version":3,"sources":["./$_lazy_route_resources|lazy|groupOptions: {}|namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/converter.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(() => {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = () => ([]);\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 8255;\nmodule.exports = webpackEmptyAsyncContext;","import { Component, ViewChild, ElementRef, ViewChildren, QueryList } from '@angular/core';\nimport * as Converter from \"./converter\";\nimport '@cds/core/input/register.js';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n\n  editorOptions = {\n    theme: 'vs-dark',\n    language: 'json',\n    // \"autoIndent\": true,\n    // \"formatOnPaste\": true,\n    // \"formatOnType\": true\n  };\n  goLangEditorOptions = {\n    theme: 'vs-dark',\n    language: 'go',\n    // \"autoIndent\": true,\n    // \"formatOnPaste\": true,\n    // \"formatOnType\": true\n  };\n\n  @ViewChildren('todoInput')\n  todoInputElement!: QueryList<any>;\n\n  @ViewChild('primaryEntityName') primaryInputNameElement: any;\n\n  manualInfo: Map<string, string> = new Map();\n  missingInfo: Map<string, string> = new Map();\n  schemaList: any[] = [];\n  updatedSchemaList: any[] = [];\n  relationships: any;\n  golangStructs: any[] = [];\n  updatedRelationships: any;\n  activeTab: any = \"\";\n\n  invalidJsonInput: boolean = false;\n  errorText: any;\n  currentTodo = 0;\n\n\n  jsonInput: any = \"{\\n\\n}\"\n\n\n\n  start() {\n    this.startConversion(this.jsonInput);\n  }\n\n  startConversion(event: any) {\n    if (this.jsonInput == \"{\\n\\n}\") return;\n    this.invalidJsonInput = false;\n    // this.jsonInput = JSON.parse(event);\n    console.log(this.primaryInputNameElement.nativeElement.value)\n    let result: any[];\n\n    try {\n\n      if(!this.primaryInputNameElement.nativeElement.value) throw \"Missing Primary EntityName\";\n\n      result = Converter.JsonToCollectorSchema(this.jsonInput, this.primaryInputNameElement.nativeElement.value, { name: \"ComputeResource\", type: \"Host\" }, this.manualInfo);\n      this.schemaList = result[0];\n      console.log(result[1])\n\n      this.relationships = result[1];\n      this.manualInfo = result[2];\n      this.golangStructs = result[3];\n\n      this.invalidJsonInput = false;\n      this.errorText = \"\";\n    } catch (e) {\n      if (e == \"Failed to parse JSON\") {\n        this.invalidJsonInput = true;\n        this.errorText = e;\n        console.error(e);\n      }\n      if (e == \"Missing Primary EntityName\") {\n        this.invalidJsonInput = true;\n        this.errorText = e;\n        console.error(e);\n      }\n\n\n      else {\n        throw e;\n      }\n    }\n\n    Array.from(this.manualInfo.entries()).forEach((entry) => {\n      if (entry[1] == Converter.MANUAL_REVIEW_NEEDED_PLACEHOLDER || entry[1] == \"\") {\n        this.missingInfo.set(entry[0], entry[1]);\n      }\n    })\n\n  }\n\n  updateManualInfo(lookupKey: string, input: any) {\n\n    this.missingInfo.delete(lookupKey);\n    this.manualInfo.set(lookupKey, input);\n    this.currentTodo++;\n    setTimeout(() => {\n      this.todoInputElement.get(0).nativeElement.focus();\n    }, 10)\n\n  }\n  lastTodo() {\n    if (this.currentTodo > 0) {\n      this.currentTodo--;\n    }\n  }\n\n  relationshipCodeChange(event: any) {\n\n    this.updatedRelationships = event;\n  }\n\n  schemaCodeChange(event: any, index: any) {\n    this.updatedSchemaList[index] = event;\n  }\n\n  saveChanges() {\n\n  }\n}\n","<div class=\"container\">\n\n\n\n  <div class=\"json-input\">\n    <div class=\"input-title\">\n      <h3>\n        Input JSON\n      </h3>\n      <ng-container *ngIf=\"errorText?.length > 0\">\n\n        <div style=\"color:red;margin-top:24px\">\n          &nbsp;&nbsp;{{errorText}}\n        </div>\n      </ng-container>\n    </div>\n\n    <clr-input-container style=\"width:500px\">\n\n      <input #primaryEntityName\n             clrInput\n             style=\"width:500px\"\n             [placeholder]=\"'Primary Entity Name'\">\n    </clr-input-container>\n\n    <textarea [(ngModel)]=\"jsonInput\">\n    </textarea>\n    <button class=\"btn\"\n            (click)=\"start()\">Run\n    </button>\n  </div>\n\n\n\n  <div class=\"todos\">\n    <h3 *ngIf=\"missingInfo.size > 0\">\n      Missing Info\n    </h3>\n    <div *ngIf=\"missingInfo.size > 0\">\n      Manual Input Needed\n      <span class=\"badge badge-purple\">{{missingInfo?.size}}</span>\n    </div>\n\n    <ng-container *ngFor=\"let todo of missingInfo | keyvalue | slice:0:1\">\n      <div style=\"display:flex; flex-direction: column;margin-bottom:20px; width:500px;\">\n        <clr-input-container style=\"width:500px\">\n          <label>\n            {{todo.key}}\n          </label>\n\n          <input #todoInput\n                 clrInput\n                 style=\"width:500px\"\n                 [placeholder]=\"todo.value\"\n                 (keyup.enter)=\"updateManualInfo(todo.key, todoInput.value)\">\n        </clr-input-container>\n      </div>\n\n      <button class=\"btn\"\n              *ngIf=\"todo\"\n              (click)=\"updateManualInfo(todo.key, todoInput.value)\">Ok\n      </button>\n    </ng-container>\n\n  </div>\n\n  <div class=\"output\">\n    <h3>\n      Output\n    </h3>\n    <clr-tabs clrLayout=\"vertical\">\n\n      <clr-tab>\n        <button clrTabLink><b>Relationships</b></button>\n        <clr-tab-content *clrIfActive>\n          <div class=\"relationships-tab\">\n\n            <ngx-monaco-editor [options]=\"editorOptions\"\n                               [ngModel]=\"relationships | json\"\n                               (ngModelChange)=\"relationshipCodeChange($event)\">\n            </ngx-monaco-editor>\n            <br>\n          </div>\n        </clr-tab-content>\n      </clr-tab>\n\n\n      <ng-container *ngFor=\"let schema of schemaList; let i=index\">\n\n        <clr-tab>\n          <button clrTabLink>{{schema?.type}}</button>\n          <clr-tab-content *clrIfActive>\n            <div *ngIf=\"schema\"\n                 class=\"entity-tab\">\n              <div>\n                <h4>\n                  Go Struct\n                </h4>\n                <ngx-monaco-editor [options]=\"goLangEditorOptions\"\n                                   [ngModel]=\"golangStructs[i]\"\n                                   (ngModelChange)=\"schemaCodeChange($event, i)\">\n                </ngx-monaco-editor>\n              </div>\n              <div>\n                <h4>\n                  Collector Schema\n                </h4>\n                <ngx-monaco-editor [options]=\"editorOptions\"\n                                   [ngModel]=\"schema | json\"\n                                   (ngModelChange)=\"schemaCodeChange($event, i)\">\n                </ngx-monaco-editor>\n              </div>\n\n            </div>\n\n          </clr-tab-content>\n        </clr-tab>\n\n      </ng-container>\n\n    </clr-tabs>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ClarityModule, ClrInputModule } from '@clr/angular';\n\nimport { AppComponent } from './app.component';\nimport { FormsModule } from '@angular/forms';\nimport { MonacoEditorModule, MONACO_PATH } from '@materia-ui/ngx-monaco-editor';\n\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    ClarityModule,\n    FormsModule,\n    MonacoEditorModule\n  ],\n  providers: [{\n    provide: MONACO_PATH,\n    useValue: 'https://unpkg.com/monaco-editor@0.33.0/min/vs'\n  }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import * as _ from 'lodash';\nimport * as NumToWords from 'number-to-words';\n\nconst parentOfPrimaryEntityInfo = {\n  \"targetEntity\": {\n    \"name\": \"ComputeResourceId\",\n    \"description\": \"ID of the node assigned by the cloud provider in the format: <ProviderName>://<ProviderSpecificNodeID>. Optional.\",\n    \"type\": \"string\"\n  },\n  \"targetEntityId\": {\n    \"idType\": \"Extract\",\n    \"extractedInfo\": {\n      \"name\": \"ComputeResourceId\",\n      \"type\": \"string\"\n    }\n  },\n  \"targetEntityType\": \"Instance\",\n  \"targetEntityProvider\": \"AWS\",\n  \"targetEntityService\": \"EC2\"\n}\n\n\nexport function JsonToCollectorSchema(rawEntityJson: string, primaryEntityName: string, parentOfPrimaryEntityInfo: any, manualInfo: Map<string, string>, nameChanges?: Map<string, string>): [any, any, any, any] {\n\n  let jsonInput: any;\n\n  try {\n    if (typeof rawEntityJson == 'string') {\n      jsonInput = JSON.parse(rawEntityJson);\n    } else {\n      jsonInput = rawEntityJson;\n    }\n  } catch (e) {\n    throw \"Failed to parse JSON\";\n  }\n\n  // define outputs\n  let relationships = {\n    [primaryEntityName]: {\n      \"parent\": {\n        id: parentOfPrimaryEntityInfo?.name + 'Id',\n        name: parentOfPrimaryEntityInfo?.name,\n        description: parentOfPrimaryEntityInfo.description,\n        type: parentOfPrimaryEntityInfo.name\n      },\n      \"children\": new Array()\n    }\n  };\n\n  let collectorResp = {\n    Primary: {},\n    Auxiliary: {}\n  }\n\n  let schemas: any[] = [];\n  let golangStructs: any[] = [];\n\n\n  let entitiesToParse = [\n    [primaryEntityName, jsonInput]\n  ];\n\n  while (entitiesToParse.length > 0) {\n    console.log(`'${_.startCase(\"127.0.0.1\").replace(/\" \"/gi, \"\")}'`)\n\n    let entity: any = entitiesToParse.shift();\n\n    let entityName = properNaming(entity[0], nameChanges);\n\n    let entityValue = entity[1];\n\n    console.log(\"entities left: \", entitiesToParse.length)\n    console.log(\"processing entity\", entityName);\n\n    // skip to next loop if value is null\n    if (entityValue === null || entityValue === undefined) {\n      continue;\n    }\n\n    // split apart properties that are entities and ones that arent\n    let subEntities = Object.entries(entityValue).filter((entry) => isAnEntity(entry[1]));\n    let nonEntityProps = Object.entries(entityValue).filter((entry) => !isAnEntity(entry[1]) && !isAMap(entry[1]));\n    let mapEntities = Object.entries(entityValue).filter((entry) => isAMap(entry[1]));\n\n    // map entities should be just a parent entity and one instance of the mapped entity\n    mapEntities = mapEntities.map(([name, value]: [any, any]) => {\n      let firstMappedEntity = value[Object.keys(value)[0]];\n\n      return [\n        name,\n        {\n          [name + \"Entry\"]: firstMappedEntity\n        }\n      ];\n    });\n\n    // add relationship entry if none exists\n    if (!relationships[entityName]) {\n      relationships[entityName] = {\n        parent: {\n          id: entityName + 'Id',\n          name: entityName,\n          description: manualInfoLookup(`${relationships[entityName].parent.name}.${entityName}.description`, manualInfo),\n          type: entityName\n        },\n        children: []\n      }\n    }\n\n    // add all sub entities to children relationship entry. This doesnt include maps and properties that arent entities themselves.\n    relationships[entityName].children = [...subEntities, ...mapEntities].map((subEntity) => {\n      let subEntityName = properNaming(subEntity[0]);\n\n      return {\n        id: subEntityName + 'Id',\n        name: subEntityName,\n        description: manualInfoLookup(`${entityName}.${subEntity[0]}.description`, manualInfo),\n        type: subEntityName\n      }\n    });\n\n\n    // add parent relationship for each child entity found\n    [...subEntities, ...mapEntities]\n      .forEach((subEntity) => {\n        let subEntityName = properNaming(subEntity[0])\n        return relationships[subEntityName] = {\n          parent: {\n            id: entityName + 'Id',\n            name: entityName,\n            description: manualInfoLookup(`${relationships[entityName].parent.name}.${entityName}.description`, manualInfo),\n            type: entityName\n          },\n          children: new Array()\n        }\n      })\n\n\n    // generate the schema\n    let res = createCollectorSchema(entityName, nonEntityProps, relationships[entityName], manualInfo);\n    schemas.push(res[0]);\n\n    // generate golang structs\n    golangStructs.push(createGolangStruct(entityName, subEntities, nonEntityProps, mapEntities));\n\n    // save items that need manual review\n    manualInfo = res[1];\n\n    // add children entities to be processed\n    entitiesToParse = [\n      ...entitiesToParse,\n      ...subEntities,\n      ...mapEntities\n    ]\n\n  }\n\n\n  return [schemas, relationships, manualInfo, golangStructs];\n}\n\nfunction createGolangStruct(entityName: string, subEntities: any, nonEntityProps: any, mapEntities: any) {\n  let structAsString =\n    `type ${properNaming(entityName)} struct {\\r\\n`;\n\n  subEntities.forEach((subEntity: any) => {\n    structAsString = structAsString + `     ${properNaming(subEntity[0])} *${properNaming(subEntity[0])} \\`json:\"${properNaming(subEntity[0])},omitempty\"\\`\\r\\n`;\n  });\n  structAsString = structAsString + '\\r\\n';\n  nonEntityProps.forEach((prop: any) => {\n    structAsString = structAsString + `     ${properNaming(prop[0])} *string \\`json:\"${prop[0]},omitempty\"\\`\\r\\n`;\n  })\n\n  structAsString = structAsString + '}'\n  return structAsString;\n}\n\n/**\n *\n * @param entityName Name of entity\n * @param properties Properties that are not other entities\n * @param relationships relationships of entity i.e. parent/children\n * @param manualInfo Map of info that needs manual review or has reveived it. call manualInfoLookup() to fetch unknown properties or set request review\n */\nfunction createCollectorSchema(entityName: string, properties: any[], relationships: any, manualInfo: Map<string, string>): [any, Map<string, string>] {\n  let schema = {\n    \"service\": \"Software\",\n    \"provider\": \"Host\",\n    \"type\": properNaming(entityName),\n\n    \"id\": ID_EXTRACTION,\n\n    \"locationOverride\": LOCATION_OVERRIDE,\n\n    \"properties\": [\n      ...properties.map((property) => {\n        return {\n          \"name\": properNaming(property[0]),\n          \"description\": manualInfoLookup(`${relationships.parent}.${property[0]}.description`, manualInfo),\n          \"type\": typeof property[1]\n        };\n      })\n    ],\n\n    \"relationships\": [\n      {\n        \"type\": RelationshipType.Parent,\n        \"targetEntity\": relationships.parent.id,\n        \"targetEntityId\": {\n          \"idType\": \"Extract\",\n          \"extractedInfo\": {\n            \"name\": relationships.parent.id,\n            \"type\": \"string\"\n          }\n        },\n        \"targetEntityType\": relationships.parent.type,\n        \"targetEntityProvider\": \"Host\",\n        \"targetEntityService\": \"Software\"\n      },\n      ...relationships.children.map((child: any) => {\n        return ({\n          \"type\": RelationshipType.Child,\n          \"targetEntity\": {\n            \"name\": child.type,\n            \"description\": manualInfoLookup(`${relationships.parent.name}.${entityName}.${child.name}.description`, manualInfo),\n            \"type\": \"complex\",\n            \"complexAttributes\": {\n              \"schemaFile\": `software/${child.type}.json`\n            }\n          },\n          \"targetEntityService\": \"Software\",\n          \"targetEntityProvider\": \"Host\",\n          \"targetEntityType\": child.type\n        })\n      })\n    ]\n  };\n\n  return [schema, manualInfo];\n}\n\n\n// in this simple function a map is an object whose properties are objects with identical sub-properties\nfunction isAMap(object: any) {\n  let isAMap = true;\n\n  let keys = Object.keys(object);\n\n  let firstItem = object[keys[0]];\n  let secondItem = object[keys[1]];\n\n  if (keys.length < 2) {\n    return false;\n  }\n\n  if (typeof firstItem !== \"object\") {\n    return false;\n  }\n\n  if (!firstItem || !secondItem) {\n    return false;\n  }\n\n  if (typeof firstItem === \"string\") {\n    return false;\n  }\n\n  const propsIn1st = Object.keys(firstItem);\n  const propsIn2nd = Object.keys(secondItem);\n\n  propsIn1st.forEach((prop) => {\n    if (!propsIn2nd.includes(prop)) {\n      isAMap = false;\n      return;\n    }\n  });\n  return isAMap;\n}\n\nfunction isAnEntity(object: any) {\n  let keys = Object.keys(object);\n  let firstItem = object[keys[0]];\n\n  return !Array.isArray(object) && typeof object === \"object\" && !isAMap(object);\n}\n\nfunction manualInfoLookup(key: string, manualInfo: Map<string, string>) {\n  if (!manualInfo.has(key)) {\n    manualInfo.set(key, MANUAL_REVIEW_NEEDED_PLACEHOLDER);\n  }\n  return manualInfo.get(key)\n}\n\nfunction properNaming(name: string, nameChanges?: Map<string, string>): string {\n  if (nameChanges?.has(name)) {\n    return nameChanges.get(name)!;\n  }\n  name = _.startCase(name).replace(/\\s/g, '');\n  if (!isNaN(Number.parseInt(name))) {\n    name = NumToWords.toWords(name);\n  } else if (!isNaN(Number.parseInt(name[0]))) {\n    name = NumToWords.toWords(name[0]) + name.substring(1, name.length);\n  }\n  return name;\n}\n\nexport const MANUAL_REVIEW_NEEDED_PLACEHOLDER = \"CONVERTER - INCOMPLETE\";\n\nexport const LOCATION_OVERRIDE = {\n  \"locationType\": \"Extract\",\n  \"extractedInfo\": {\n    \"name\": \"Location\",\n    \"type\": \"string\"\n  }\n}\n\nexport const ID_EXTRACTION = {\n  \"idType\": \"Extract\",\n  \"extractedInfo\": {\n    \"name\": \"Id\",\n    \"type\": \"string\"\n  }\n}\n\nexport enum RelationshipType {\n  Parent = \"IsAssociatedWith\",\n  Child = \"Contains\"\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}